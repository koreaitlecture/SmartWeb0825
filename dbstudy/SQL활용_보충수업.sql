DROP TABLE MEMBERS;
DROP SEQUENCE MEMBER_SEQ;


-- 테이블 만들기
CREATE TABLE MEMBERS (  -- MEMBERS 테이블
NO NUMBER PRIMARY KEY,  -- 기본키 PRIMARY KEY
ID VARCHAR2(30 BYTE) NOT NULL UNIQUE,
PASSWORD VARCHAR2(30 BYTE) NOT NULL,  -- 필수 NOT NULL
EMAIL VARCHAR2(100 BYTE) UNIQUE,  -- 중복 없음 UNIQUE
POINT NUMBER,
REGDATE DATE
);


-- 시퀀스 만들기
-- 시퀀스 : 자동 순번 생성기
CREATE SEQUENCE MEMBER_SEQ START WITH 1 NOCACHE;


-- 행 입력
-- INSERT INTO 테이블 VALUES (값, 값, 값, ...)
INSERT INTO MEMBERS VALUES (MEMBER_SEQ.NEXTVAL, 'ADMIN', '1234', 'ADMIN@', 0, SYSDATE);
INSERT INTO MEMBERS VALUES (MEMBER_SEQ.NEXTVAL, 'ADMIN2', '1234', 'ADMIN2@', 0, SYSDATE);
INSERT INTO MEMBERS VALUES (MEMBER_SEQ.NEXTVAL, 'ADMIN3', '1234', 'ADMIN3@', 0, SYSDATE);
INSERT INTO MEMBERS VALUES (MEMBER_SEQ.NEXTVAL, 'ADMIN4', '1234', 'ADMIN4@', 0, SYSDATE);


-- 행 수정
-- UPDATE 테이블 SET 업데이트 WHERE 조건식

-- 모든 회원의 포인트를 1000으로 수정하시오.
UPDATE MEMBERS SET POINT = 1000;

-- 회원번호가 2인 회원의 포인트를 1000 증가시키시오.
UPDATE MEMBERS SET POINT = POINT + 1000 WHERE NO = 2;


-- 행 삭제
-- DELETE FROM 테이블 WHERE 조건식;

-- 회원번호가 4인 회원을 삭제하시오.
DELETE FROM MEMBERS WHERE NO = 4;


-- 행 삽입/ 행 수정/ 행 삭제 -> 최종 저장
COMMIT;

-- 행 삽입/ 행 수정/ 행 삭제 -> 취소
ROLLBACK;  -- 직전 COMMIT 까지 취소



-- DQL : 조회
-- SELECT 조회할 값 FROM 테이블 WHERE 조건식 GROUP BY 그룹 HAVING 그룹조건식 ORDER BY 정렬 ASC/DESC

-- 1. 모든 회원들의 아이디와 가입일을 조회하시오.
SELECT ID, REGDATE FROM MEMBERS;

-- 2. 회원번호가 2인 회원의 아이디와 포인트를 조회하시오.
SELECT ID, POINT FROM MEMBERS WHERE NO = 2;

-- 3. 아이디가 ADMIN, ADMIN2인 회원의 모든 칼럼을 조회하시오.
SELECT * FROM MEMBERS WHERE ID IN('ADMIN', 'ADMIN2');

-- 4. 모든 회원의 포인트 평균을 조회하시오.
SELECT AVG(POINT) FROM MEMBERS;  -- AVG : 평균 (SUM, MAX, MIN, COUNT 등)

-- 5. 포인트가 같은 회원이 몇 명인지 조회하시오. 단, 같은 회원이 2명 이상인 경우만 조회하시오.
SELECT POINT, COUNT(*) FROM MEMBERS GROUP BY POINT HAVING COUNT(*) >= 2;


-- VIEW 만드는 방법
-- 인덱스에 대해서
-- 조인
